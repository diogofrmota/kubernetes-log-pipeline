config:
  service: |
    [SERVICE]
        Flush         5
        Daemon        Off
        Log_Level     info
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

  inputs: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

  filters: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL           https://kubernetes.default.svc:443
        Kube_CA_File       /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File    /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix    kube.var.log.containers.
        Merge_Log          On
        Keep_Log           Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On

  outputs: |
    [OUTPUT]
        Name            kafka
        Match           *
        Brokers         kafka.logging.svc.cluster.local:9092
        Topics          fluent-bit-logs
        Timestamp_Key   @timestamp
        rdkafka.security.protocol             SASL_PLAINTEXT
        rdkafka.sasl.mechanism                PLAIN
        rdkafka.sasl.username                 admin
        rdkafka.sasl.password                 'OMITTED'
        rdkafka.queue.buffering.max.ms        1000
        rdkafka.message.send.max.retries      3
        rdkafka.retry.backoff.ms              100
        rdkafka.socket.keepalive.enable       true
        rdkafka.log.connection.close          false
        rdkafka.request.required.acks         1

service:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2020"

resources:
  requests:
    memory: "100Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "200m"